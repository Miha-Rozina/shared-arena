name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: build

      - uses: actions-rs/cargo@v1
        with:
          command: test

  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1

  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: stable
  #         override: true
  #         components: rustfmt, clippy

  #     - uses: actions-rs/cargo@v1
  #       with:
  #         command: fmt
  #         args: --all -- --check

  #     - uses: actions-rs/cargo@v1
  #       if: always()
  #       with:
  #         command: clippy
  #         args: --all-features -- -D warnings

  grcov:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal

      - name: Execute tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zno-landing-pads"

      - id: coverage
        name: Coverage
        uses: actions-rs/grcov@v0.1

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          file: ${{ steps.coverage.outputs.report }}
          # file: ./coverage.xml # optional
          # flags: unittests # optional
          # name: codecov-umbrella # optional
          # fail_ci_if_error: true # optional (default = false)

  benchmark:
    name: Run benchmark
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal

      - name: Run benchmark
        run: cargo bench -- --noplot --output-format bencher | tee output.txt

      - name: Store benchmark result
        uses: rhysd/github-action-benchmark@v1
        with:
          name: Rust Benchmark
          tool: 'cargo'
          output-file-path: output.txt
          github-token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          auto-push: true
          # Show alert with commit comment on detecting possible performance regression
          alert-threshold: '10%'
          comment-on-alert: true
          fail-on-alert: true

  miri:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: miri, rust-src

      - uses: actions-rs/cargo@v1
        with:
          command: miri
          args: setup

      - uses: actions-rs/cargo@v1
        with:
          command: miri
          # Ignore leaks because of AtomicPtr:
          # https://github.com/rust-lang/miri/issues/1318
          args: test --all-features -- -Zmiri-ignore-leaks
